@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Newtonsoft.Json
@using Wsi.CyFun.Elephants.Core.Entities
@using Wsi.CyFun.Elephants.Web.ViewModels
@model FunctionViewModel
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = "Show Survey";
    int scorePostIndex = 0;

    var selectedMunicipality = ViewBag.SelectedMunicipality;
    var allMunicipalities = ViewBag.AllMunicipalities;
    var functionId = ViewBag.FunctionId as Guid? ?? Model.Id;
}

<!DOCTYPE html>
<html lang="nl">
<head>
    <meta charset="utf-8" />
    <title>@ViewData["Title"]</title>
</head>
<body>
    <div class="container-fluid mt-4">
        <div class="row">
            <div class="col-12">
                <h1>@Model.Name <small class="text-muted">@Model.Code</small></h1>
                <p class="lead">@Model.Description</p>
                <div class="mb-3">
                    <form asp-action="ChangeMunicipality" asp-controller="Survey" method="post" class="d-flex align-items-center" style="margin-bottom:0;">
                        <input type="hidden" name="functionId" value="@functionId" />
                            <div class="alert alert-info d-flex align-items-center mb-2" style="gap: 0.5rem; width: 100%;">
                            <label for="municipalityId" class="form-label mb-0 fw-bold" style="min-width: 90px;">Gemeente:</label>
                            <select name="municipalityId" id="municipalityId" class="form-select form-select-sm" style="width: 100px;" onchange="this.form.submit()">
                                @foreach (var m in allMunicipalities)
                                {
                                    <option value="@m.Id" selected="@(selectedMunicipality != null && m.Id == selectedMunicipality.Id ? "selected" : null)">
                                        @m.Name
                                    </option>
                                }
                            </select>
                        </div>
                    </form>
                </div>
                <div class="alert alert-info">
                    Aantal categorieÃ«n: @Model.Categories.Count
                </div>
            </div>
        </div>

        @if (!Model.Categories.Any())
        {
            <div class="alert alert-warning">Geen categorie voor deze functie.</div>
        }
        else
        {
            <form asp-action="SaveSurvey" method="post">
                <div class="accordion" id="categoriesAccordion">
                    @for (var i = 0; i < Model.Categories.Count; i++)
                    {
                        var category = Model.Categories.OrderBy(c => c.Order).ToList()[i];
                        var catId = $"cat{i}";
                        <div class="accordion-item mb-3">
                            <h2 class="accordion-header" id="heading-@catId">
                                <button class="accordion-button bg-primary text-white" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-@catId" aria-expanded="false" aria-controls="collapse-@catId">
                                    <span class="fw-bold">@category.Name <small class="text-white">@category.Code</small></span>
                                </button>
                            </h2>
                            <div id="collapse-@catId" class="accordion-collapse collapse" aria-labelledby="heading-@catId" data-bs-parent="#categoriesAccordion">
                                <div class="accordion-body">
                                    <p>@category.Description</p>
                                    @if (!category.SubCategories.Any())
                                    {
                                        <div class="alert alert-warning">Geen subcategorie voor deze categorie.</div>
                                    }
                                    else
                                    {
                                        <div class="accordion" id="subcategoriesAccordion-@catId">
                                            @for (var j = 0; j < category.SubCategories.Count; j++)
                                            {
                                                var subCategory = category.SubCategories.OrderBy(sc => sc.Order).ToList()[j];
                                                var subId = $"{catId}-sub{j}";
                                                <div class="accordion-item mb-2">
                                                    <h2 class="accordion-header" id="heading-@subId">
                                                        <button class="accordion-button bg-secondary text-white collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-@subId" aria-expanded="false" aria-controls="collapse-@subId">
                                                            <span class="fw-bold">@subCategory.Name <small class="text-white">@subCategory.Code</small></span>
                                                        </button>
                                                    </h2>
                                                    <div id="collapse-@subId" class="accordion-collapse collapse" aria-labelledby="heading-@subId" data-bs-parent="#subcategoriesAccordion-@catId">
                                                        <div class="accordion-body">
                                                            <p>@subCategory.Description</p>
                                                            @if (!subCategory.Requirements.Any())
                                                            {
                                                                <div class="alert alert-warning">Geen vereisten voor deze subcategorie.</div>
                                                            }
                                                            else
                                                            {
                                                                @for (var k = 0; k < subCategory.Requirements.Count; k++)
                                                                {
                                                                    var requirement = subCategory.Requirements.OrderBy(r => r.Order).ToList()[k];

                                                                    <div class="card mb-3">
                                                                        <div class="card-header @(requirement.IsKeyMeasurement ? "bg-warning" : "bg-light")">
                                                                            <h5>@requirement.Name</h5>
                                                                            <span class="badge bg-info">@requirement.Code</span>
                                                                            @if (requirement.IsKeyMeasurement)
                                                                            {
                                                                                <span class="badge bg-warning">Belangrijke maatregel</span>
                                                                            }
                                                                        </div>
                                                                        <div class="card-body">
                                                                            <p>@requirement.Description</p>

                                                                            <input type="hidden" name="Scores[@scorePostIndex].RequirementId" value="@requirement.Id" />

                                                                            <div class="row g-3">
                                                                                <div class="col-md-6">
                                                                                    <label class="form-label">Documentatie Maturiteit Score</label>
                                                                                    <select class="form-select" asp-for="@requirement.DocumentationMaturityScore" name="Scores[@scorePostIndex].DocumentationMaturityScore" required>
                                                                                        @for (var l = 0; l <= 5; l++)
                                                                                        {
                                                                                            <option value="@l">@l</option>
                                                                                        }
                                                                                    </select>
                                                                                </div>

                                                                                <div class="col-md-6">
                                                                                    <label class="form-label">Implementatie Maturiteit Score</label>
                                                                                    <select class="form-select" asp-for="@requirement.ImplementationMaturityScore" name="Scores[@scorePostIndex].ImplementationMaturityScore" required>
                                                                                        @for (var l = 0; l <= 5; l++)
                                                                                        {
                                                                                            <option value="@l">@l</option>
                                                                                        }
                                                                                    </select>
                                                                                </div>

                                                                                <div class="col-12">
                                                                                    <label class="form-label">Additional Info</label>
                                                                                    <textarea class="form-control" asp-for="@requirement.AdditionalInfo" name="Scores[@scorePostIndex].AdditionalInfo" rows="3"></textarea>
                                                                                </div>
                                                                            </div>

                                                                            @if (requirement.Guidances.Any())
                                                                            {
                                                                                <div class="mt-3">
                                                                                    <h6>Guidance:</h6>
                                                                                    <ul class="list-group">
                                                                                        @for (var m = 0; m < requirement.Guidances.Count; m++)
                                                                                        {
                                                                                            var guidance = requirement.Guidances.OrderBy(g => g.Order).ToList()[m];
                                                                                            <li class="list-group-item @(guidance.IsTitle ? "active" : "")">
                                                                                                @guidance.Description
                                                                                            </li>
                                                                                        }
                                                                                    </ul>
                                                                                </div>
                                                                            }
                                                                            else
                                                                            {
                                                                                <div class="alert alert-light mt-3">Geen richtlijnen beschikbaar voor deze vereiste.</div>
                                                                            }
                                                                        </div>
                                                                    </div>
                                                                    scorePostIndex++;
                                                                }
                                                            }
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
                <div class="mb-4">
                    <button type="submit" class="btn btn-primary small">OPSLAAN</button>
                </div>
            </form>
        }
    </div>

    <style>
        .card-header h3, .card-header h4, .card-header h5 {
            margin-bottom: 0.25rem;
        }

        .badge {
            font-size: 85%;
        }

        .accordion-button.bg-primary:not(.collapsed),
        .accordion-button.bg-secondary:not(.collapsed) {
            color: #ffffff;
            background-color: #003366;
        }

        .accordion-button.bg-secondary:not(.collapsed) {
            background-color: #6c757d;
        }

        .accordion-button.bg-primary::after,
        .accordion-button.bg-secondary::after {
            filter: brightness(0) invert(1);
        }
    </style>
    <div id="containerProgressbar">
        <div id="myProgress" class="progress-sticky">
            <div id="myBar"></div>
        </div>
    </div>
    <div id="finish" class="text-success text-center finish-message"></div>
</body>
</html>


<style>
    #myProgress {
        width: 100%;
        background-color: #ddd;
        margin-top: 5px;
        bottom: 5px;
        border-radius: 10px;
    }

    #containerProgressbar {
        position: fixed;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 20px;
        background-color: #6C757D;
        z-index: 9999;
    }

    #myBar {
        width: 0%;
        height: 10px;
        background-color: #04AA6D;
        text-align: center;
        line-height: 30px;
        color: white;
        border-radius: 10px;
        transition: width 0.3s ease-in-out;
    }

    .progress-sticky {
        position: fixed;
        bottom: 0;
        left: 0;
        width: 100%;
        background-color: #ddd;
        z-index: 9999;
        height: 10px;
        border-radius: 0;
    }

    .finish-message {
        position: fixed;
        bottom: 20px;
        width: 100%;
        z-index: 9999;
        font-weight: bold;
    }
</style>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const selects = document.querySelectorAll('select[name*="DocumentationMaturityScore"], select[name*="ImplementationMaturityScore"]');
        const textareas = document.querySelectorAll('textarea[name*="AdditionalInfo"]');

        function isFieldFilled(field) {
            if (field.tagName.toLowerCase() === 'select') {
                return field.value !== "0";
            } else if (field.tagName.toLowerCase() === 'textarea') {
                return field.value.trim() !== "";
            }
            return false;
        }

        function updateProgressBar() {
            let filledCount = 0;
            const totalFields = selects.length + textareas.length;

            selects.forEach(sel => {
                if (isFieldFilled(sel)) {
                    filledCount++;
                    sel.dataset.changed = "true";
                } else {
                    sel.dataset.changed = "false";
                }
            });

            textareas.forEach(ta => {
                if (isFieldFilled(ta)) {
                    filledCount++;
                    ta.dataset.changed = "true";
                } else {
                    ta.dataset.changed = "false";
                }
            });

            const percent = (filledCount / totalFields) * 100;

            const bar = document.getElementById("myBar");
            const finish = document.getElementById("finish");

            bar.style.width = percent + "%";

            if (percent === 100) {
                bar.style.backgroundColor = "#009900";
                finish.innerHTML = "Het formulier is succesvol ingevuld!";
            } else {
                bar.style.backgroundColor = "#007BFF";
                finish.innerHTML = "";
            }
        }

        selects.forEach(select => {
            select.addEventListener("change", updateProgressBar);
        });

        textareas.forEach(textarea => {
            textarea.addEventListener("input", updateProgressBar);
        });

        updateProgressBar();
    });

</script>